--------------------------------------------------------------------------------
--  DROP ALL TABLES AND SEQUENCE
--------------------------------------------------------------------------------
DROP TRIGGER WT_WATER_RIGHTS_PKTRIG;
DROP TRIGGER WT_WATER_RIGHTS_UPDATETRIG;
DROP SEQUENCE WT_WATER_RIGHTS_PKSEQ;
DROP TABLE WT_WATER_RIGHTS;

DROP TRIGGER WT_TRACK_FILE_PKTRIG;
DROP SEQUENCE WT_TRACK_FILE_PKSEQ;
DROP TABLE WT_TRACK_FILE;

DROP TRIGGER WT_TRANS_PKTRIG;
DROP TRIGGER WT_TRANS_UPDATETRIG;
--------------------------------------------------------------------------------
--  DDL for Table WT_WATER_RIGHTS
--------------------------------------------------------------------------------
CREATE TABLE WT_WATER_RIGHTS(
  WT_WATER_RIGHTS_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,WATER_RIGHTS_TYPE VARCHAR2(64)
  ,WATER_RIGHTS_NUM VARCHAR2(32)
  ,CREATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP
  ,CREATED_BY_ID NUMBER(*,0) 	
	,UPDATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP 
  ,UPDATED_BY_ID NUMBER(*,0)
);
/
CREATE SEQUENCE WT_WATER_RIGHTS_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_WATER_RIGHTS_PKTRIG
BEFORE INSERT
ON WT_WATER_RIGHTS
FOR EACH ROW
BEGIN
  IF :NEW.WT_WATER_RIGHTS_ID IS NULL THEN
    SELECT WT_WATER_RIGHTS_PKSEQ.NEXTVAL INTO :NEW.WT_WATER_RIGHTS_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATED_DATE FROM DUAL;
  SELECT SYSTIMESTAMP INTO :NEW.UPDATED_DATE FROM DUAL;
END WT_WATER_RIGHTS;
/
CREATE OR REPLACE TRIGGER WT_WATER_RIGHTS_UPDATETRIG 
BEFORE UPDATE
ON WT_WATER_RIGHTS
FOR EACH ROW 
BEGIN 
  SELECT SYSTIMESTAMP INTO :NEW.UPDATED_DATE FROM DUAL; 
END WT_WATER_RIGHTS_UPDATETRIG;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_TRACK_FILE
--------------------------------------------------------------------------------
CREATE TABLE WT_TRACK_FILE (
  WT_TRACK_FILE_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,FILENAME VARCHAR(128)
  ,STATUS_NAME VARCHAR(16)
  ,FILE_LOB BLOB
  ,MIME_TYPE VARCHAR(64)
  ,CREATED_DATE TIMESTAMP DEFAULT SYSTIMESTAMP
  ,CREATED_BY_ID NUMBER(*,0)
);
/
CREATE SEQUENCE WT_TRACK_FILE_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_TRACK_FILE_PKTRIG
BEFORE INSERT
ON WT_TRACK_FILE
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRACK_FILE_ID IS NULL THEN
    SELECT WT_TRACK_FILE_PKSEQ.NEXTVAL INTO :NEW.WT_TRACK_FILE_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATED_DATE FROM DUAL;
END WT_TRACK_FILE;
/

--------------------------------------------------------------------------------
--  Modify Triggers for Table WT_TRANS
--------------------------------------------------------------------------------
create or replace TRIGGER WT_TRANS_PKTRIG
BEFORE INSERT
ON WT_TRANS
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRANS_ID IS NULL THEN
    SELECT WT_TRANS_PKSEQ.NEXTVAL INTO :NEW.WT_TRANS_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATE_DATE FROM DUAL;
  SELECT SYSTIMESTAMP INTO :NEW.MODIFY_DATE FROM DUAL;
END WT_TRANS;
/
CREATE OR REPLACE TRIGGER WT_TRANS_UPDATETRIG 
BEFORE UPDATE
ON WT_TRANS
FOR EACH ROW 
BEGIN 
  SELECT SYSTIMESTAMP INTO :NEW.MODIFY_DATE FROM DUAL; 
END WT_TRANS_UPDATETRIG;
/

--------------------------------------------------------------------------------
--  Modify Columns of table WT_ATTACHMENT
--------------------------------------------------------------------------------
ALTER TABLE WT_ATTACHMENT MODIFY MIME_TYPE VARCHAR(128);


--------------------------------------------------------------------------------
--  Add Columns to Table WT_RESERVOIR
--------------------------------------------------------------------------------
ALTER TABLE WT_RESERVOIR ADD IS_INSTREAM_REQ NUMBER(1,0);
ALTER TABLE WT_RESERVOIR ADD WATER_TRANS_QUA NUMBER(18,0);
/

--------------------------------------------------------------------------------
--  Add Columns to Table WT_CROP_IDLING
--------------------------------------------------------------------------------
ALTER TABLE WT_CROP_IDLING ADD WATER_TRANS_QUA NUMBER(18,0);
/

--------------------------------------------------------------------------------
--  Add Columns to Table WT_GROUNDWATER
--------------------------------------------------------------------------------
ALTER TABLE WT_GROUNDWATER ADD IS_RES_RELEASE NUMBER(1,0);
/

--------------------------------------------------------------------------------
--  Modify Table WT_TRANS
--------------------------------------------------------------------------------
ALTER TABLE WT_TRANS ADD SUR_WATER_SOURCE VARCHAR2(32);
ALTER TABLE WT_TRANS ADD REQ_STORAGE_EXP VARCHAR2(32);
ALTER TABLE WT_TRANS ADD IS_STATE_CONTRACTOR NUMBER(1,0);
ALTER TABLE WT_TRANS ADD IS_FISHERIES_REVIEW NUMBER(1,0);
ALTER TABLE WT_TRANS ADD FISHERIES_APPROVAL_DATE DATE;
ALTER TABLE WT_TRANS ADD DWR_COMMENTS VARCHAR2(500);
ALTER TABLE WT_TRANS ADD REQ_EXP_FROM VARCHAR2(16);
ALTER TABLE WT_TRANS ADD REQ_EXP_TO VARCHAR2(16);
--ALTER TABLE WT_TRANS DROP COLUMN REQ_EXP_FROM;
--ALTER TABLE WT_TRANS DROP COLUMN REQ_EXP_TO;
ALTER TABLE WT_TRANS ADD IS_SHORT_LONG NUMBER(1,0);
ALTER TABLE WT_TRANS ADD ASSIGNED_REVIEWER VARCHAR2(64);
/

--------------------------------------------------------------------------------
--  Modify Table WT_AGENCY
--------------------------------------------------------------------------------
ALTER TABLE WT_AGENCY ADD AGENCY_TYPE VARCHAR2(16);
/


--------------------------------------------------------------------------------
--  Modify Table WT_WATER_RIGHTS
--------------------------------------------------------------------------------
ALTER TABLE WT_WATER_RIGHTS ADD PROPOSED_TRANS_VOL NUMBER(16,0);
/

--------------------------------------------------------------------------------
--  Modify Table WT_TRANS_TYPE
--------------------------------------------------------------------------------
ALTER TABLE  WT_TRANS_TYPE ADD TYPE_VOLUME NUMBER(16,0);
ALTER TABLE  WT_TRANS_TYPE ADD TYPE_DETAIL VARCHAR2(64);
/
DELETE FROM WT_TRANS_TYPE;

--------------------------------------------------------------------------------
--  Modify Table WT_FU_TYPE
--------------------------------------------------------------------------------
Insert into WT_FU_TYPE (WT_FU_TYPE_ID,FU_TYPE,FU_TYPE_DESCRIPTION,FU_SUB_TYPE) values (11,'CVP','Central Valley Project-Jones','Jones');
Insert into WT_FU_TYPE (WT_FU_TYPE_ID,FU_TYPE,FU_TYPE_DESCRIPTION,FU_SUB_TYPE) values (23,'SWP','State Water Project-SWP/CVP Intertie','SWP/CVP Intertie');


--------------------------------------------------------------------------------
--  Modify Table WT_BUYER
--------------------------------------------------------------------------------
UPDATE WT_BUYER SET SHARE_PERCENT=null;
ALTER TABLE WT_BUYER MODIFY SHARE_PERCENT NUMBER(5,2);
/

--------------------------------------------------------------------------------
--  DROP ALL TABLES AND SEQUENCE
--------------------------------------------------------------------------------
DROP TRIGGER WT_TRANS_NEPA_PKTRIG;
DROP SEQUENCE WT_TRANS_NEPA_PKSEQ;
DROP TABLE WT_TRANS_NEPA;

DROP TRIGGER WT_TRANS_CEQA_PKTRIG;
DROP SEQUENCE WT_TRANS_CEQA_PKSEQ;
DROP TABLE WT_TRANS_CEQA;

DROP TRIGGER WT_TRANS_SWRCB_PKTRIG;
DROP SEQUENCE WT_TRANS_SWRCB_PKSEQ;
DROP TABLE WT_TRANS_SWRCB;

DROP TRIGGER WT_TRANS_REACH_PKTRIG;
DROP SEQUENCE WT_TRANS_REACH_PKSEQ;
DROP TABLE WT_TRANS_REACH;

DROP TRIGGER WT_AGENCY_APPROVAL_PKTRIG;
DROP SEQUENCE WT_AGENCY_APPROVAL_PKSEQ;
DROP TABLE WT_AGENCY_APPROVAL;

DROP TRIGGER WT_WATER_LOSS_PKTRIG;
DROP SEQUENCE WT_WATER_LOSS_PKSEQ;
DROP TABLE WT_WATER_LOSS;

--------------------------------------------------------------------------------
--  DDL for Table WT_TRANS_SWRCB
--------------------------------------------------------------------------------
CREATE TABLE WT_TRANS_SWRCB(
  WT_TRANS_SWRCB_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,SWRCB_PETITION_DATE DATE
  ,SWRCB_ORDER_DATE DATE
);
/
CREATE SEQUENCE WT_TRANS_SWRCB_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_TRANS_SWRCB_PKTRIG
BEFORE INSERT
ON WT_TRANS_SWRCB
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRANS_SWRCB_ID IS NULL THEN
    SELECT WT_TRANS_SWRCB_PKSEQ.NEXTVAL INTO :NEW.WT_TRANS_SWRCB_ID FROM DUAL;
  END IF;
END WT_TRANS_SWRCB;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_TRANS_CEQA
--------------------------------------------------------------------------------
CREATE TABLE WT_TRANS_CEQA(
  WT_TRANS_CEQA_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,CEQA_SUBMITTED_DATE DATE
  ,CEQA_ADOPTED_DATE DATE
);
/
CREATE SEQUENCE WT_TRANS_CEQA_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_TRANS_CEQA_PKTRIG
BEFORE INSERT
ON WT_TRANS_CEQA
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRANS_CEQA_ID IS NULL THEN
    SELECT WT_TRANS_CEQA_PKSEQ.NEXTVAL INTO :NEW.WT_TRANS_CEQA_ID FROM DUAL;
  END IF;
END WT_TRANS_CEQA;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_TRANS_NEPA
--------------------------------------------------------------------------------
CREATE TABLE WT_TRANS_NEPA(
  WT_TRANS_NEPA_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,NEPA_ISSUED_DATE DATE
  ,NEPA_ADOPTED_DATE DATE
);
/
CREATE SEQUENCE WT_TRANS_NEPA_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_TRANS_NEPA_PKTRIG
BEFORE INSERT
ON WT_TRANS_NEPA
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRANS_NEPA_ID IS NULL THEN
    SELECT WT_TRANS_NEPA_PKSEQ.NEXTVAL INTO :NEW.WT_TRANS_NEPA_ID FROM DUAL;
  END IF;
END WT_TRANS_NEPA;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_TRANS_REACH
--------------------------------------------------------------------------------
CREATE TABLE WT_TRANS_REACH(
  WT_TRANS_REACH_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)
  ,POWER_PROVIDER VARCHAR2(32)
  ,IS_REACH_1 NUMBER(1,0) DEFAULT 0
  ,IS_REACH_2A NUMBER(1,0) DEFAULT 0
  ,IS_REACH_2B NUMBER(1,0) DEFAULT 0
  ,IS_REACH_3 NUMBER(1,0) DEFAULT 0
  ,IS_REACH_4 NUMBER(1,0) DEFAULT 0
  ,IS_REACH_5 NUMBER(1,0) DEFAULT 0
  ,IS_REACH_6 NUMBER(1,0) DEFAULT 0
  ,IS_REACH_7 NUMBER(1,0) DEFAULT 0
);
/
CREATE SEQUENCE WT_TRANS_REACH_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_TRANS_REACH_PKTRIG
BEFORE INSERT
ON WT_TRANS_REACH
FOR EACH ROW
BEGIN
  IF :NEW.WT_TRANS_REACH_ID IS NULL THEN
    SELECT WT_TRANS_REACH_PKSEQ.NEXTVAL INTO :NEW.WT_TRANS_REACH_ID FROM DUAL;
  END IF;
END WT_TRANS_REACH;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_AGENCY_APPROVAL
--------------------------------------------------------------------------------
CREATE TABLE WT_AGENCY_APPROVAL(
  WT_AGENCY_APPROVAL_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)  
  ,DWR NUMBER(1,0) DEFAULT 0
  ,SWRCB NUMBER(1,0) DEFAULT 0
  ,USBR NUMBER(1,0) DEFAULT 0
  ,FISHERY NUMBER(1,0) DEFAULT 0
  ,OTHER NUMBER(1,0) DEFAULT 0
  ,OTHER_DETAIL VARCHAR2(32)
);
/
CREATE SEQUENCE WT_AGENCY_APPROVAL_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_AGENCY_APPROVAL_PKTRIG
BEFORE INSERT
ON WT_AGENCY_APPROVAL
FOR EACH ROW
BEGIN
  IF :NEW.WT_AGENCY_APPROVAL_ID IS NULL THEN
    SELECT WT_AGENCY_APPROVAL_PKSEQ.NEXTVAL INTO :NEW.WT_AGENCY_APPROVAL_ID FROM DUAL;
  END IF;
END WT_AGENCY_APPROVAL;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_WATER_LOSS
--------------------------------------------------------------------------------
CREATE TABLE WT_WATER_LOSS(
  WT_WATER_LOSS_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID REFERENCES WT_TRANS(WT_TRANS_ID)  
  ,BANKS_INITIAL_PERCENT NUMERIC(5,2)
  ,BANKS_FINAL_PERCENT NUMERIC(5,2)
  ,NBA_INITIAL_PERCENT NUMERIC(5,2)
  ,NBA_FINAL_PERCENT NUMERIC(5,2)
  ,MERCED_INITIAL_PERCENT NUMERIC(5,2)
  ,MERCED_FINAL_PERCENT NUMERIC(5,2)
);
/
CREATE SEQUENCE WT_WATER_LOSS_PKSEQ START WITH 1;
/
CREATE OR REPLACE TRIGGER WT_WATER_LOSS_PKTRIG
BEFORE INSERT
ON WT_WATER_LOSS
FOR EACH ROW
BEGIN
  IF :NEW.WT_WATER_LOSS_ID IS NULL THEN
    SELECT WT_WATER_LOSS_PKSEQ.NEXTVAL INTO :NEW.WT_WATER_LOSS_ID FROM DUAL;
  END IF;
END WT_WATER_LOSS;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_STATUS_TRACK
--------------------------------------------------------------------------------
DROP TRIGGER WT_STATUS_TRACK_PKTRIG;
DROP SEQUENCE WT_STATUS_TRACK_PKSEQ;
DROP TABLE WT_STATUS_TRACK;

CREATE TABLE WT_STATUS_TRACK (
  WT_STATUS_TRACK_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID NUMERIC(16,0)
  ,STATUS_NAME VARCHAR2(16)
  ,STATUS_DESCRIPTION VARCHAR2(128)
  ,SUB_STATUS VARCHAR2(128)
  ,STATUS_COMMENTS  VARCHAR2(256)
  ,USERNAME VARCHAR2(16)
  ,STATUS_DATE DATE
  ,CREATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP
  ,CREATED_BY_ID NUMBER(*,0) 	
	,UPDATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP 
  ,UPDATED_BY_ID NUMBER(*,0)
);
/

CREATE SEQUENCE WT_STATUS_TRACK_PKSEQ  
  START WITH 1
  INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER WT_STATUS_TRACK_PKTRIG
BEFORE INSERT
ON WT_STATUS_TRACK
FOR EACH ROW
BEGIN
  IF :NEW.WT_STATUS_TRACK_ID IS NULL THEN
    SELECT WT_STATUS_TRACK_PKSEQ.NEXTVAL INTO :NEW.WT_STATUS_TRACK_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATED_DATE FROM DUAL;
  SELECT SYSTIMESTAMP INTO :NEW.UPDATED_DATE FROM DUAL;
END WT_STATUS_TRACK;
/
CREATE OR REPLACE TRIGGER WT_STATUS_TRACK_UPDATETRIG 
BEFORE UPDATE
ON WT_STATUS_TRACK
FOR EACH ROW 
BEGIN 
  SELECT SYSTIMESTAMP INTO :NEW.UPDATED_DATE FROM DUAL; 
END WT_STATUS_TRACK_UPDATETRIG;
/

INSERT INTO WT_STATUS_TRACK(WT_TRANS_ID) SELECT WT_TRANS_ID FROM WT_TRANS WHERE WT_TRANS.WT_STATUS_FLAG_ID < 9;
UPDATE WT_STATUS_TRACK SET STATUS_NAME='DRAFT',STATUS_DESCRIPTION='Draft',USERNAME='Seller',STATUS_DATE='05-JAN-16';

--------------------------------------------------------------------------------
--  Modify Table WT_STATUS_FLAG
--------------------------------------------------------------------------------

SELECT * FROM WT_STATUS_FLAG;
ALTER TABLE WT_TRANS DROP CONSTRAINT SYS_C0014414;
-- QA Database
ALTER TABLE WT_TRANS DROP CONSTRAINT SYS_C0023363;

DELETE FROM WT_STATUS_FLAG;

REM INSERTING into WT_STATUS_FLAG
SET DEFINE OFF;
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (0,'DRAFT','Draft');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (1,'SUBMITTED','Submitted');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (2,'UREVIEW','Under Review');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (3,'PCOMPLETE','Proposal Complete');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (4,'CAPPROVAL','Conditional Approval');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (5,'PAPPROVED','Proposal Approved');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (6,'SUSPEND','Suspend');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (7,'CANCEL','Cancel');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (8,'TPROGRESS','Transfer in Progress');
Insert into WT_STATUS_FLAG (WT_STATUS_FLAG_ID,STATUS_NAME,STATUS_DESCRIPTION) values (9,'TCOMPLETE','Transfer Completed');
/

ALTER TABLE WT_TRANS ADD CONSTRAINT SYS_C0014414 FOREIGN KEY(WT_STATUS_FLAG_ID) REFERENCES WT_STATUS_FLAG(WT_STATUS_FLAG_ID); 
-- QA Database
ALTER TABLE WT_TRANS ADD CONSTRAINT SYS_C0023363 FOREIGN KEY(WT_STATUS_FLAG_ID) REFERENCES WT_STATUS_FLAG(WT_STATUS_FLAG_ID); 
--ALTER TABLE WT_TRANS ADD CONSTRAINT TRANS_STATUS FOREIGN KEY(WT_STATUS_FLAG_ID) REFERENCES WT_STATUS_FLAG(WT_STATUS_FLAG_ID);

SELECT * FROM WT_TRANS WHERE WT_STATUS_FLAG_ID=6;
UPDATE WT_TRANS SET WT_STATUS_FLAG_ID=9 WHERE WT_STATUS_FLAG_ID=6;
SELECT * FROM WT_TRANS WHERE WT_STATUS_FLAG_ID=9;

--------------------------------------------------------------------------------
--  DDL for Table WT_CHANGE_LOG
--------------------------------------------------------------------------------
DROP TRIGGER WT_CHANGE_LOG_PKTRIG;
DROP SEQUENCE WT_CHANGE_LOG_PKSEQ;
DROP TABLE WT_CHANGE_LOG;

CREATE TABLE WT_CHANGE_LOG (
  WT_CHANGE_LOG_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID NUMERIC(16,0)
  ,CHANGE_USER VARCHAR2(32)
  ,CHANGE_LOG CLOB
  ,CREATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP
  ,CREATED_BY_ID NUMBER(*,0) 	
);
/

CREATE SEQUENCE WT_CHANGE_LOG_PKSEQ  
  START WITH 1
  INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER WT_CHANGE_LOG_PKTRIG
BEFORE INSERT
ON WT_CHANGE_LOG
FOR EACH ROW
BEGIN
  IF :NEW.WT_CHANGE_LOG_ID IS NULL THEN
    SELECT WT_CHANGE_LOG_PKSEQ.NEXTVAL INTO :NEW.WT_CHANGE_LOG_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATED_DATE FROM DUAL;
END WT_CHANGE_LOG;
/

--------------------------------------------------------------------------------
--  DDL for Table WT_REVIEWER_COMMENTS
--------------------------------------------------------------------------------
DROP TRIGGER WT_REVIEWER_COMMENTS_PKTRIG;
DROP SEQUENCE WT_REVIEWER_COMMENTS_PKSEQ;
DROP TABLE WT_REVIEWER_COMMENTS;

CREATE TABLE WT_REVIEWER_COMMENTS (
  WT_REVIEWER_COMMENTS_ID NUMERIC(16,0) PRIMARY KEY
  ,WT_TRANS_ID NUMERIC(16,0)
  ,REVIEWER_NAME VARCHAR2(32)
  ,REVIEWER_COMMENTS CLOB
  ,CREATED_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP
  ,CREATED_BY_ID NUMBER(*,0) 	
);
/

CREATE SEQUENCE WT_REVIEWER_COMMENTS_PKSEQ  
  START WITH 1
  INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER WT_REVIEWER_COMMENTS_PKTRIG
BEFORE INSERT
ON WT_REVIEWER_COMMENTS
FOR EACH ROW
BEGIN
  IF :NEW.WT_REVIEWER_COMMENTS_ID IS NULL THEN
    SELECT WT_REVIEWER_COMMENTS_PKSEQ.NEXTVAL INTO :NEW.WT_REVIEWER_COMMENTS_ID FROM DUAL;
  END IF;
  SELECT SYSTIMESTAMP INTO :NEW.CREATED_DATE FROM DUAL;
END WT_REVIEWER_COMMENTS;
/


--------------------------------------------------------------------------------
--  Modify Table WT_GW_MONTHLY
--------------------------------------------------------------------------------
ALTER TABLE WT_GW_MONTHLY ADD MEASUREMENT_DATE VARCHAR2(16);
/





